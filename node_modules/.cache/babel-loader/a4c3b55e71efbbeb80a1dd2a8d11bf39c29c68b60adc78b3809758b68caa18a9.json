{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// Open simple dialogs on top of an editor. Relies on dialog.css.\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  function dialogDiv(cm, template, bottom) {\n    var wrap = cm.getWrapperElement();\n    var dialog;\n    dialog = wrap.appendChild(document.createElement(\"div\"));\n    if (bottom) dialog.className = \"CodeMirror-dialog CodeMirror-dialog-bottom\";else dialog.className = \"CodeMirror-dialog CodeMirror-dialog-top\";\n    if (typeof template == \"string\") {\n      dialog.innerHTML = template;\n    } else {\n      // Assuming it's a detached DOM element.\n      dialog.appendChild(template);\n    }\n    CodeMirror.addClass(wrap, 'dialog-opened');\n    return dialog;\n  }\n  function closeNotification(cm, newVal) {\n    if (cm.state.currentNotificationClose) cm.state.currentNotificationClose();\n    cm.state.currentNotificationClose = newVal;\n  }\n  CodeMirror.defineExtension(\"openDialog\", function (template, callback, options) {\n    if (!options) options = {};\n    closeNotification(this, null);\n    var dialog = dialogDiv(this, template, options.bottom);\n    var closed = false,\n      me = this;\n    function close(newVal) {\n      if (typeof newVal == 'string') {\n        inp.value = newVal;\n      } else {\n        if (closed) return;\n        closed = true;\n        CodeMirror.rmClass(dialog.parentNode, 'dialog-opened');\n        dialog.parentNode.removeChild(dialog);\n        me.focus();\n        if (options.onClose) options.onClose(dialog);\n      }\n    }\n    var inp = dialog.getElementsByTagName(\"input\")[0],\n      button;\n    if (inp) {\n      inp.focus();\n      if (options.value) {\n        inp.value = options.value;\n        if (options.selectValueOnOpen !== false) {\n          inp.select();\n        }\n      }\n      if (options.onInput) CodeMirror.on(inp, \"input\", function (e) {\n        options.onInput(e, inp.value, close);\n      });\n      if (options.onKeyUp) CodeMirror.on(inp, \"keyup\", function (e) {\n        options.onKeyUp(e, inp.value, close);\n      });\n      CodeMirror.on(inp, \"keydown\", function (e) {\n        if (options && options.onKeyDown && options.onKeyDown(e, inp.value, close)) {\n          return;\n        }\n        if (e.keyCode == 27 || options.closeOnEnter !== false && e.keyCode == 13) {\n          inp.blur();\n          CodeMirror.e_stop(e);\n          close();\n        }\n        if (e.keyCode == 13) callback(inp.value, e);\n      });\n      if (options.closeOnBlur !== false) CodeMirror.on(dialog, \"focusout\", function (evt) {\n        if (evt.relatedTarget !== null) close();\n      });\n    } else if (button = dialog.getElementsByTagName(\"button\")[0]) {\n      CodeMirror.on(button, \"click\", function () {\n        close();\n        me.focus();\n      });\n      if (options.closeOnBlur !== false) CodeMirror.on(button, \"blur\", close);\n      button.focus();\n    }\n    return close;\n  });\n  CodeMirror.defineExtension(\"openConfirm\", function (template, callbacks, options) {\n    closeNotification(this, null);\n    var dialog = dialogDiv(this, template, options && options.bottom);\n    var buttons = dialog.getElementsByTagName(\"button\");\n    var closed = false,\n      me = this,\n      blurring = 1;\n    function close() {\n      if (closed) return;\n      closed = true;\n      CodeMirror.rmClass(dialog.parentNode, 'dialog-opened');\n      dialog.parentNode.removeChild(dialog);\n      me.focus();\n    }\n    buttons[0].focus();\n    for (var i = 0; i < buttons.length; ++i) {\n      var b = buttons[i];\n      (function (callback) {\n        CodeMirror.on(b, \"click\", function (e) {\n          CodeMirror.e_preventDefault(e);\n          close();\n          if (callback) callback(me);\n        });\n      })(callbacks[i]);\n      CodeMirror.on(b, \"blur\", function () {\n        --blurring;\n        setTimeout(function () {\n          if (blurring <= 0) close();\n        }, 200);\n      });\n      CodeMirror.on(b, \"focus\", function () {\n        ++blurring;\n      });\n    }\n  });\n\n  /*\n   * openNotification\n   * Opens a notification, that can be closed with an optional timer\n   * (default 5000ms timer) and always closes on click.\n   *\n   * If a notification is opened while another is opened, it will close the\n   * currently opened one and open the new one immediately.\n   */\n  CodeMirror.defineExtension(\"openNotification\", function (template, options) {\n    closeNotification(this, close);\n    var dialog = dialogDiv(this, template, options && options.bottom);\n    var closed = false,\n      doneTimer;\n    var duration = options && typeof options.duration !== \"undefined\" ? options.duration : 5000;\n    function close() {\n      if (closed) return;\n      closed = true;\n      clearTimeout(doneTimer);\n      CodeMirror.rmClass(dialog.parentNode, 'dialog-opened');\n      dialog.parentNode.removeChild(dialog);\n    }\n    CodeMirror.on(dialog, 'click', function (e) {\n      CodeMirror.e_preventDefault(e);\n      close();\n    });\n    if (duration) doneTimer = setTimeout(close, duration);\n    return close;\n  });\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","dialogDiv","cm","template","bottom","wrap","getWrapperElement","dialog","appendChild","document","createElement","className","innerHTML","addClass","closeNotification","newVal","state","currentNotificationClose","defineExtension","callback","options","closed","me","close","inp","value","rmClass","parentNode","removeChild","focus","onClose","getElementsByTagName","button","selectValueOnOpen","select","onInput","on","e","onKeyUp","onKeyDown","keyCode","closeOnEnter","blur","e_stop","closeOnBlur","evt","relatedTarget","callbacks","buttons","blurring","i","length","b","e_preventDefault","setTimeout","doneTimer","duration","clearTimeout"],"sources":["D:/project/CollIDE/node_modules/codemirror/addon/dialog/dialog.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// Open simple dialogs on top of an editor. Relies on dialog.css.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  function dialogDiv(cm, template, bottom) {\n    var wrap = cm.getWrapperElement();\n    var dialog;\n    dialog = wrap.appendChild(document.createElement(\"div\"));\n    if (bottom)\n      dialog.className = \"CodeMirror-dialog CodeMirror-dialog-bottom\";\n    else\n      dialog.className = \"CodeMirror-dialog CodeMirror-dialog-top\";\n\n    if (typeof template == \"string\") {\n      dialog.innerHTML = template;\n    } else { // Assuming it's a detached DOM element.\n      dialog.appendChild(template);\n    }\n    CodeMirror.addClass(wrap, 'dialog-opened');\n    return dialog;\n  }\n\n  function closeNotification(cm, newVal) {\n    if (cm.state.currentNotificationClose)\n      cm.state.currentNotificationClose();\n    cm.state.currentNotificationClose = newVal;\n  }\n\n  CodeMirror.defineExtension(\"openDialog\", function(template, callback, options) {\n    if (!options) options = {};\n\n    closeNotification(this, null);\n\n    var dialog = dialogDiv(this, template, options.bottom);\n    var closed = false, me = this;\n    function close(newVal) {\n      if (typeof newVal == 'string') {\n        inp.value = newVal;\n      } else {\n        if (closed) return;\n        closed = true;\n        CodeMirror.rmClass(dialog.parentNode, 'dialog-opened');\n        dialog.parentNode.removeChild(dialog);\n        me.focus();\n\n        if (options.onClose) options.onClose(dialog);\n      }\n    }\n\n    var inp = dialog.getElementsByTagName(\"input\")[0], button;\n    if (inp) {\n      inp.focus();\n\n      if (options.value) {\n        inp.value = options.value;\n        if (options.selectValueOnOpen !== false) {\n          inp.select();\n        }\n      }\n\n      if (options.onInput)\n        CodeMirror.on(inp, \"input\", function(e) { options.onInput(e, inp.value, close);});\n      if (options.onKeyUp)\n        CodeMirror.on(inp, \"keyup\", function(e) {options.onKeyUp(e, inp.value, close);});\n\n      CodeMirror.on(inp, \"keydown\", function(e) {\n        if (options && options.onKeyDown && options.onKeyDown(e, inp.value, close)) { return; }\n        if (e.keyCode == 27 || (options.closeOnEnter !== false && e.keyCode == 13)) {\n          inp.blur();\n          CodeMirror.e_stop(e);\n          close();\n        }\n        if (e.keyCode == 13) callback(inp.value, e);\n      });\n\n      if (options.closeOnBlur !== false) CodeMirror.on(dialog, \"focusout\", function (evt) {\n        if (evt.relatedTarget !== null) close();\n      });\n    } else if (button = dialog.getElementsByTagName(\"button\")[0]) {\n      CodeMirror.on(button, \"click\", function() {\n        close();\n        me.focus();\n      });\n\n      if (options.closeOnBlur !== false) CodeMirror.on(button, \"blur\", close);\n\n      button.focus();\n    }\n    return close;\n  });\n\n  CodeMirror.defineExtension(\"openConfirm\", function(template, callbacks, options) {\n    closeNotification(this, null);\n    var dialog = dialogDiv(this, template, options && options.bottom);\n    var buttons = dialog.getElementsByTagName(\"button\");\n    var closed = false, me = this, blurring = 1;\n    function close() {\n      if (closed) return;\n      closed = true;\n      CodeMirror.rmClass(dialog.parentNode, 'dialog-opened');\n      dialog.parentNode.removeChild(dialog);\n      me.focus();\n    }\n    buttons[0].focus();\n    for (var i = 0; i < buttons.length; ++i) {\n      var b = buttons[i];\n      (function(callback) {\n        CodeMirror.on(b, \"click\", function(e) {\n          CodeMirror.e_preventDefault(e);\n          close();\n          if (callback) callback(me);\n        });\n      })(callbacks[i]);\n      CodeMirror.on(b, \"blur\", function() {\n        --blurring;\n        setTimeout(function() { if (blurring <= 0) close(); }, 200);\n      });\n      CodeMirror.on(b, \"focus\", function() { ++blurring; });\n    }\n  });\n\n  /*\n   * openNotification\n   * Opens a notification, that can be closed with an optional timer\n   * (default 5000ms timer) and always closes on click.\n   *\n   * If a notification is opened while another is opened, it will close the\n   * currently opened one and open the new one immediately.\n   */\n  CodeMirror.defineExtension(\"openNotification\", function(template, options) {\n    closeNotification(this, close);\n    var dialog = dialogDiv(this, template, options && options.bottom);\n    var closed = false, doneTimer;\n    var duration = options && typeof options.duration !== \"undefined\" ? options.duration : 5000;\n\n    function close() {\n      if (closed) return;\n      closed = true;\n      clearTimeout(doneTimer);\n      CodeMirror.rmClass(dialog.parentNode, 'dialog-opened');\n      dialog.parentNode.removeChild(dialog);\n    }\n\n    CodeMirror.on(dialog, 'click', function(e) {\n      CodeMirror.e_preventDefault(e);\n      close();\n    });\n\n    if (duration)\n      doneTimer = setTimeout(close, duration);\n\n    return close;\n  });\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}